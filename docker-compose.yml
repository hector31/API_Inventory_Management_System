services:
  # Central Inventory Management System
  inventory-management-system:
    build:
      context: ./packages/backend/services/inventory-management-system
      dockerfile: Dockerfile
    container_name: inventory-management-system
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - LOG_LEVEL=debug
      - ENVIRONMENT=development
      - INVENTORY_WORKER_COUNT=4
      - INVENTORY_QUEUE_BUFFER_SIZE=500
      - ENABLE_JSON_PERSISTENCE=true
      - DATA_PATH=./data/inventory_test_data.json
      - IDEMPOTENCY_CACHE_TTL=2m
      - IDEMPOTENCY_CACHE_CLEANUP_INTERVAL=30s
      - API_KEYS=demo,central-api-key
      - MAX_EVENTS_IN_QUEUE=10000
      - EVENTS_FILE_PATH=./data/events.json
    volumes:
      - inventory_data:/app/data
    networks:
      - meli_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Store S1 API
  store-s1:
    build:
      context: ./packages/backend
      dockerfile: ./services/store-s1/Dockerfile
    container_name: store-s1
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      - PORT=8083
      - LOG_LEVEL=debug
      - ENVIRONMENT=development
      - API_KEYS=store-s1-key,demo
      - CENTRAL_API_URL=http://inventory-management-system:8081
      - CENTRAL_API_KEY=demo
      - DATA_DIR=/app/data
      # Legacy full sync interval (fallback)
      - SYNC_INTERVAL_MINUTES=5
      # Event-driven sync configuration
      - SYNC_INTERVAL_SECONDS=30
      - EVENT_WAIT_TIMEOUT_SECONDS=20
      - EVENT_BATCH_LIMIT=100
    networks:
      - meli_network
    depends_on:
      - inventory-management-system
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./packages/backend/services/inventory-management-system/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - meli_network
    depends_on:
      - inventory-management-system

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - meli_network
    depends_on:
      - prometheus

# Volumes for data persistence
volumes:
  inventory_data:
  prometheus_data:
  grafana_data:

# Network
networks:
  meli_network:
    driver: bridge
