# Inventory Management API Configuration
# Copy this file to .env and modify the values as needed

# Server Configuration
PORT=8080

# API Configuration
# Comma-separated list of valid API keys
API_KEYS=demo,test-key,prod-key

# Admin API Configuration
# Comma-separated list of admin API keys (for admin endpoints)
ADMIN_API_KEYS=admin-demo,admin-key

# Rate Limiting Configuration
# Enable/disable rate limiting (true/false)
RATE_LIMIT_ENABLED=true

# Rate limiting type: "ip", "global", or "both"
# - ip: limit per IP address (protects against individual client abuse)
# - global: limit total requests across all clients (protects server resources)
# - both: apply whichever limit is hit first
RATE_LIMIT_TYPE=ip

# Maximum requests per minute for regular endpoints
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# Time window in minutes for rate limiting
RATE_LIMIT_WINDOW_MINUTES=1

# Maximum requests per minute for admin endpoints (typically lower)
RATE_LIMIT_ADMIN_REQUESTS_PER_MINUTE=50

# Data Configuration
DATA_PATH=data/inventory_test_data.json

# Logging Configuration
# Supported levels: debug, info, warn, error
LOG_LEVEL=info

# Environment (development, staging, production)
ENVIRONMENT=development

# Cache Configuration
# TTL for idempotency cache entries (e.g., 1m, 2m, 5m)
IDEMPOTENCY_CACHE_TTL=2m
# How often to clean up expired cache entries (e.g., 30s, 1m)
IDEMPOTENCY_CACHE_CLEANUP_INTERVAL=30s

# Persistence Configuration
# Whether to persist inventory changes back to JSON file (true/false)
ENABLE_JSON_PERSISTENCE=true

# Worker Pool Configuration
# Number of worker goroutines to process inventory updates (1-10 recommended)
INVENTORY_WORKER_COUNT=1
# Buffer size for the inventory update queue (100-1000 recommended)
INVENTORY_QUEUE_BUFFER_SIZE=100
